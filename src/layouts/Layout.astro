---
export interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonicalURL?: string;
}

const { 
  title = "Jesús Gil - Personal Landing Page",
  description = "Jesús Gil - Engineer and student. Connect with me through my social links and professional networks.",
  image = "https://avatars.githubusercontent.com/u/131034722?v=4",
  canonicalURL = Astro.url.href
} = Astro.props;

// Metadatos dinámicos
const siteName = "Jesús Gil";
const siteUrl = "https://jesusgil.dev"; // Cambiar por tu dominio real
const twitterHandle = "@JesusRgil";
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    <!-- SEO Meta Tags -->
    <meta name="author" content="Jesús Gil" />
    <meta name="robots" content="index, follow" />
    <meta name="theme-color" content="#6366f1" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:image:width" content="400" />
    <meta property="og:image:height" content="400" />
    <meta property="og:site_name" content={siteName} />
    <meta property="og:locale" content="es_ES" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={canonicalURL} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={image} />
    <meta name="twitter:creator" content={twitterHandle} />
    
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "Jesús Gil",
      "jobTitle": "Engineer and student",
      "url": siteUrl,
      "image": image,
      "sameAs": [
        "https://www.linkedin.com/in/jesus-r-gil/",
        "https://github.com/JesusRgil",
        "https://t.me/Jr_Gil"
      ],
      "email": "fariasjesusrodolfo@gmail.com"
    })} />
    
    <!-- Preload critical fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    
    <!-- Preload critical image -->
    <link rel="preload" as="image" href={image} />
    
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  :root {
    --color-primary: #6366f1;
    --color-secondary: #8b5cf6;
    --color-accent: #ec4899;
    --color-background: #0f0f23;
    --color-surface: rgba(255, 255, 255, 0.05);
    --color-text: #ffffff;
    --color-text-secondary: #a1a1aa;
    --animation-duration: 0.3s;
    --animation-easing: cubic-bezier(0.4, 0, 0.2, 1);
    --border-radius: 16px;
    --spacing-unit: 8px;
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html {
    font-family: 'Inter', system-ui, sans-serif;
    scroll-behavior: smooth;
    font-size: 16px;
  }

  body {
    background-color: var(--color-background);
    color: var(--color-text);
    line-height: 1.6;
    font-size: 16px;
    overflow-x: hidden;
    min-height: 100vh;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.05);
  }

  ::-webkit-scrollbar-thumb {
    background: rgba(99, 102, 241, 0.5);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgba(99, 102, 241, 0.7);
  }

  /* Focus styles for accessibility */
  a:focus,
  button:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  /* Selection styling */
  ::selection {
    background-color: rgba(99, 102, 241, 0.3);
    color: var(--color-text);
  }

  /* Utility classes */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Responsive typography */
  @media (max-width: 768px) {
    html {
      font-size: 15px;
    }
  }

  @media (max-width: 480px) {
    html {
      font-size: 14px;
    }
  }

  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
    
    html {
      scroll-behavior: auto;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    :root {
      --color-text: #ffffff;
      --color-text-secondary: #cccccc;
      --color-surface: rgba(255, 255, 255, 0.1);
    }
  }
</style>